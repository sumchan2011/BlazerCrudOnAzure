@page "/editCustomer/{ID}"
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject Toolbelt.Blazor.I18nText.I18nText I18nText

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Name" class="control-label">@localizer["customerName"]</label>
                <input for="Name" class="form-control" @bind-value="@customer.CustomerName" />

                <label for="Name" class="control-label">@localizer["customerPhone"]</label>
                <input for="Name" type="number" class="form-control" @bind-value="@customer.CustomerPhone" />

                <label for="Name" class="control-label">@localizer["customerEmail"]</label>
                <input for="Name" class="form-control" @bind-value="@customer.CustomerEmail" />

                <label for="Name" class="control-label">@localizer["customerCompany"]</label>
                <input for="Name" class="form-control" @bind-value="@customer.CustomerCompany" />

            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" @onclick="() => ConfirmedUpdate()">@localizer["confirm"]</button>
                <button type="button" class="btn btn-danger" @onclick="() => Cancel()">@localizer["cancel"]</button>
            </div>
        </form>
    </div>
</div>

@code  {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public Customer customer { get; set; }
    private BlazorCRUD1.I18nText.localizer localizer = new I18nText.localizer();

    protected override async Task OnInitializedAsync()
    {
        localizer = await I18nText.GetTextTableAsync<I18nText.localizer>(this);
    }
    void ConfirmedUpdate()
    {
        BlazoredModal.Close(ModalResult.Ok(customer));
    }

    void Cancel()
    {
        BlazoredModal.Cancel();
    }
}
