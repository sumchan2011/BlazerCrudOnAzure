@page "/settleOrder"
@inject IProductManager productManager
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject Toolbelt.Blazor.I18nText.I18nText I18nText

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">

                <label for="Name" class="control-label">@localizer["totalAmount"]</label>
                <label for="Name" class="control-label">$@order.OrderTotalAmt</label>

                <label for="Name" class="control-label">@localizer["depositeAmt"]</label>
                <label for="Name" class="control-label">$@order.OrderDepositAmt</label>

                <label for="number" class="control-label">@localizer["remainAmt"]</label>
                <input type="number" step="0.01" max="@order.calculateRemainPayAmount()" @bind-value="depositeAmt">

            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="@localizer["confirm"]" @onclick="() => ConfirmedUpdate()">
                <button type="button" class="btn btn-danger" @onclick="() => Cancel()">@localizer["cancel"]</button>
            </div>
        </form>
    </div>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public Order order { get; set; }
    private BlazorCRUD1.I18nText.localizer localizer = new I18nText.localizer();
    private double depositeAmt { get; set; }
    protected override async Task OnInitializedAsync()
    {
        localizer = await I18nText.GetTextTableAsync<I18nText.localizer>(this);
    }
    void ConfirmedUpdate()
    {
        //add deposite amt should not greater than remain deposite
        if (depositeAmt > order.calculateRemainPayAmount())
        {
            return;
        }
        else
        {
            //add to total deposite and then return to save
            order.OrderDepositAmt += depositeAmt;
            BlazoredModal.Close(ModalResult.Ok(order));
        }
    }

    void Cancel()
    {
        BlazoredModal.Cancel();
    }
}