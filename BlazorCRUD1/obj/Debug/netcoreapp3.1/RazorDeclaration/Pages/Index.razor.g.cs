#pragma checksum "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fc0824147d1b6fb02bbe7cbd6b6a5ba113381254"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorCRUD1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1.Concrete;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1.Contracts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using BlazorCRUD1.DataAccess;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Blazored;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\_Imports.razor"
using Microsoft.Extensions.Localization;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 225 "C:\Users\StanleyYan\source\repos\BlazerCrudOnAzure\BlazorCRUD1\Pages\Index.razor"
       

    List<Product> productModel;
    Product productEntity = new Product();
    Store storeInfo;

    List<SaleTxn> saleTxnModel;
    List<Customer> customerModel;

    Order orderEntity = new Order();

    Boolean isProductSearchHidden = false;


    private Boolean isAdjustAllow { get; set; }

    private string searchTerm;
    private string CustomerID
    {
        get { return searchTerm; }
        set
        {
            searchTerm = value;
            FilterCustomer(searchTerm).Wait();
        }
    }

    //On data to seach.
    string searchProuctName, searchProductOrigin, searchLowerAmt, searchUpperAmt;
    //On bind variable
    string productName
    {
        get { return searchProuctName; }
        set
        {
            searchProuctName = value;
            FilterProduct(searchProuctName, searchProductOrigin, searchLowerAmt, searchUpperAmt).Wait();
        }
    }

    string productOrigin
    {
        get { return searchProductOrigin; }
        set
        {
            searchProductOrigin = value;
            FilterProduct(searchProuctName, searchProductOrigin, searchLowerAmt, searchUpperAmt).Wait();
        }
    }

    string lowerAmt
    {
        get { return searchLowerAmt; }
        set
        {
            searchLowerAmt = value;
            FilterProduct(searchProuctName, searchProductOrigin, searchLowerAmt, searchUpperAmt).Wait();
        }
    }

    string upperAmt
    {
        get { return searchUpperAmt; }
        set
        {
            searchUpperAmt = value;
            FilterProduct(searchProuctName, searchProductOrigin, searchLowerAmt, searchUpperAmt).Wait();
        }
    }

    private bool IsShow { get; set; } = false;
    private void Show()
    {
        IsShow = !IsShow;
    }

    private bool IsShow2 { get; set; } = false;
    private void Show2()
    {
        IsShow2 = !IsShow2;
    }

    protected override async Task OnInitializedAsync()
    {
        storeInfo = await storeManager.GetById(1);
    }

    protected async Task FilterProduct(String name, String origin, String lowerAmt, String upperAmt)
    {
        IsShow = true;

        if (String.IsNullOrEmpty(lowerAmt))
            lowerAmt = "0";

        if (String.IsNullOrEmpty(upperAmt))
            upperAmt = "10000000000000000000000";

        if (String.IsNullOrEmpty(name))
            name = "";

        if (String.IsNullOrEmpty(origin))
            origin = "";

        productModel = await productManager.SimplyListFilterAll(name, origin, Double.Parse(lowerAmt), Double.Parse(upperAmt));
    }

    protected void FilterClear()
    {
        searchProuctName = searchProductOrigin = searchLowerAmt = searchUpperAmt = null;
        this.IsShow = false;
        StateHasChanged();
    }

    public async void AddtoBucket(Product product)
    {
        SaleTxn saleItem = new SaleTxn();
        saleItem.SaleProduct = product;
        saleItem.SaleStatus = 0;
        saleItem.SaleQty = 1.0;
        saleItem.SaleSubTotal = saleItem.SaleQty * saleItem.SaleProduct.ProductPrice;
        saleItem.UpdatedBy = "SAM";
        saleItem.UpdatedDateTime = DateTime.Now;

        if (saleTxnModel == null)
            saleTxnModel = new List<SaleTxn>();

        if (saleItem.ProductStock == null)
            saleItem.ProductStock = new List<Stock>();

        saleItem.ProductStock = await stockManager.SimpleListAll(product.ID);


        productModel.Remove(product);

        saleTxnModel.Add(saleItem);

        orderEntity.OrderTotalTxn += saleItem.SaleSubTotal;
        orderEntity.OrderNetAmt += saleItem.SaleSubTotal;
    }

    public void RemoveFromBucket(SaleTxn saleItem)
    {
        orderEntity.OrderTotalTxn -= saleItem.SaleSubTotal;
        orderEntity.OrderNetAmt -= saleItem.SaleSubTotal;

        saleTxnModel.Remove(saleItem);
    }

    protected async Task FilterCustomer(String customerId)
    {
        IsShow2 = true;

        customerModel = await customerManager.ListAll(customerId);
    }

    public void SelectCustomer(Customer customer)
    {
        IsShow2 = false;

        orderEntity.OrderCustomer = customer;
    }

    public async void ConfirmTransaction()
    {


        /*orderEntity.UpdatedBy = "SAM";
        orderEntity.UpdatedDateTime = DateTime.Now;

        if (orderEntity.OrderCustomer == null)
            orderEntity.OrderCustomer = new Customer();

        int order_id = await orderManager.Create(orderEntity);

        foreach (SaleTxn item in saleTxnModel)
        {
            item.OrderID = order_id;
            item.UpdatedBy = "SAM";
            item.UpdatedDateTime = DateTime.Now;
            await saleManager.Create(item);
        }
        */
    }

    public async void ConfirmTransaction(Order order)
    {

        var parameters = new ModalParameters();
        parameters.Add(nameof(order), order);

        var formModal = Modal.Show<ConfirmTxn>(localizer["confirm"], parameters);
        var result = await formModal.Result;

        if (result.Cancelled)
        {
            //Console.WriteLine("Modal was cancelled");
        }
        else
        {
            Order Temp = (Order)result.Data;

            orderEntity.UpdatedBy = "SAM";
            orderEntity.UpdatedDateTime = DateTime.Now;

            if (orderEntity.OrderCustomer == null)
                orderEntity.OrderCustomer = new Customer();

            int order_id = await orderManager.Create(orderEntity);

            foreach (SaleTxn item in saleTxnModel)
            {
                item.SaleTxnOrderID = order_id;
                item.UpdatedBy = "SAM";
                item.UpdatedDateTime = DateTime.Now;
                await saleManager.Create(item);
            }
        }
    }

    public string displayStockValue(double stock, int unitType)
    {
        Dictionary<string, double> temp = BlazorCRUD1.Resources.Utils.Utils.convertStockUnit(stock, unitType);
        switch (unitType)
        {
            case 0:
                return temp["stock"] + localizer["kg"];
            case 1:
                return temp["stock"] + localizer["gun"];
            default:
                return temp["stock"].ToString();
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStoreManager storeManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStringLocalizer<Index> localizer { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IModalService Modal { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IOrderManager orderManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ICustomerManager customerManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IStockManager stockManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ISaleTxnManager saleManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IProductManager productManager { get; set; }
    }
}
#pragma warning restore 1591
